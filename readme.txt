一、项目简介
       这是一个基于 TCP 协议的文件处理程序，实现了将文件内容分块发送到服务器，服务器将每个数据块反转后返回，最终客户端将所有反转后的块合并成新文件的功能。该程序模拟了网络环境下的文件处理流程，包括分块、传输、处理和合并等步骤。
二、运行环境
       1.操作系统：Windows
       2.软件依赖：Python 3.13.2
       3.运行方式：PyCharm
三、程序结构
       1.服务器端 (ReverseServer)
		基于 TCP 协议的多线程服务器
		支持同时处理多个客户端连接
		接收客户端发送的文件块数据，将其反转后返回
		处理流程：初始化请求 → 数据反转请求 → 反转数据并响应
       2.客户端 (ReverseClient)
		与服务器建立 TCP 连接
		将输入文件按指定块大小分块
		发送分块数据到服务器并接收反转结果
		合并所有反转后的块并保存为新文
四、运行方式
       1.启动服务器
		bash
		python server.py --host 127.0.0.1 --port 12345
	2.启动客户端
		bash
		python client.py --server_ip 127.0.0.1 --server_port 12345 --lmin 50 --lmax 200 --input_file test_input.txt --output_file test_output.txt
		参数说明
		--server_ip：服务器 IP 地址（必填）
		--server_port：服务器端口号（必填，整数）
		--lmin：分块的最小大小（必填，正整数）
		--lmax：分块的最大大小（必填，正整数，且需大于等于 lmin）
		--input_file：输入文件名（必填，需存在）
		--output_file：输出文件名（必填）
五、协议说明
       1.报文格式
	所有报文采用大端序 (Big-Endian) 编码，具体格式如下：
	（1）初始化报文 (Type=0x0001)
		格式：2 字节类型 + 4 字节块数
		示例：0x0001 + 0x00000005（表示 5 个块）
	（2）初始化响应报文 (Type=0x0002)
		格式：2 字节类型 + 4 字节块数
		示例：0x0002 + 0x00000005（确认 5 个块）
	（3）反转请求报文 (Type=0x0003)
		格式：2 字节类型 + 4 字节数据长度 + 数据内容
		示例：0x0003 + 0x00000008 + b'hello world'（8 字节数据）
	（4）反转响应报文 (Type=0x0004)
		格式：2 字节类型 + 4 字节数据长度 + 反转后的数据内容
		示例：0x0004 + 0x00000008 + b'dlrow olleh'（反转后的 8 字节数据）
六、分块策略
	1.客户端根据lmin和lmax将文件分块
	2.除最后一块外，其他块大小在 [lmin, lmax] 范围内随机生成
	3.最后一块大小为剩余文件大小（可能小于 lmin）
